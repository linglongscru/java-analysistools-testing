<project name="AntDefault" default="run" basedir=".">
    <description>   
        Ant build sample for running 
        - findbugs, 
        - checkstyle, 
	- pmd,
    </description>

     <!-- Change the paths to your individual installation directories -->
    <property name="checkstyle.home.dir" location="${basedir}/lib/checkstyle" />
    <property name="findbugs.home.dir" value="${basedir}/lib/findbugs-3.0.1" />
    <property name="pmd.home.dir" value="${basedir}/lib/pmd-bin-5.5.0" />
    <property name="lib.dir" location="${basedir}/lib" />
    <property name="src.dir" location="${basedir}/src" />
    <property name="report.dir" location="${basedir}/report" />

    <property name="config.checkstyle.dir" location="${basedir}/checkstyle-config" />
    <property name="config.findbugs.dir" location="${basedir}/findbugs-config" />
    <property name="config.pmd.dir" location="${basedir}/pmd-config" />

    <property name="report.checkstyle.dir" location="${report.dir}/checkstyle" />
    <property name="report.findbugs.dir" location="${report.dir}/findbugs" />
    <property name="report.pmd.dir" location="${report.dir}/pmd" />
   
    <path id="run.classpath">
        <pathelement path="${bin.dir}" />
        <pathelement path="${basedir}/lib/junit-4.5.jar" />
    </path>

    <!-- clean report dir -->
    <target name="clean" description="Delete all result to start with a clean build.">
        <delete dir="${report.findbugs.dir}" />
        <delete dir="${report.checkstyle.dir}" />
	<delete dir="${report.pmd.dir}" />
    </target>

    <!-- findbugs -->
    <target name="findbugs"    
            description="Running findbugs."
    >
        <!-- Fail this target if FindBugs is not installed. -->
        <available file="${findbugs.home.dir}/lib/findbugs.jar" property="findbugs.available" />
        <fail unless="findbugs.available"
              message="Error: FINDBUGS_HOME not set or findbugs.jar not found."
        />
        <taskdef name="findbugs"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                 classpath="${findbugs.home.dir}/lib/findbugs-ant.jar"
        />

        <!-- Run FindBugs. -->
        <mkdir dir="${report.findbugs.dir}" />
        <findbugs home="${findbugs.home.dir}"
                  workHard="true"
                  output="xml:withMessages"
                  outputFile="${report.findbugs.dir}/findbugsXml.xml"
        >
            <class location="${basedir}/target/classes" />
            <auxClasspath>
                <fileset file="${basedir}/lib/junit-4.5.jar" />
            </auxClasspath>
        </findbugs>
    </target>

    <!-- checkstyle -->
    <target name="checkstyle" 
        description="Generate a report of code convention violations.">
        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
                 classpath="${checkstyle.home.dir}/checkstyle-7.0-all.jar"
        />

        <!-- run verification of installation-->
        <available file="${checkstyle.home.dir}/checkstyle-7.0-all.jar"
                   property="checkstyle.available"
        />
        <fail unless="checkstyle.available"
              message="Error: CHECKSTYLE_HOME not set or checkstyle-7.0-all.jar not found."
        />
        <mkdir dir="${report.checkstyle.dir}" />

        <!-- run analysis-->
        <checkstyle config="${config.checkstyle.dir}/sun_checks.xml"
                    failureProperty="checkstyle.failure"
                    failOnViolation="false"
        >
            <formatter type="xml" tofile="${report.checkstyle.dir}/checkstyle-result.xml" />
            <fileset dir="${src.dir}" includes="**/*.java" />
        </checkstyle>
    </target>

    <!-- pmd -->
    <path id="pmd2.classpath">
        <pathelement location="${build}" />
        <fileset dir="${pmd.home.dir}/lib/">
            <include name="*.jar" />
        </fileset>
    </path>
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" 
        classpathref="pmd2.classpath" />
    <target name="pmd">
        <mkdir dir="${report.pmd.dir}" />
        <pmd rulesetfiles="${config.pmd.dir}/ruleset.xml">
            <formatter type="xml" toFile="${report.pmd.dir}/pmd-result.xml" />
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </pmd>
    </target>

    <!-- -->
    <target name="run"
            description="Run the build"
            depends="clean, 
                checkstyle, 
                findbugs,
		pmd"
    >
    </target>

</project>
